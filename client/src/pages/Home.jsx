import { useState, useEffect } from 'react'

import { Loader, Card, FormField } from '../components'

const RenderCards = ({ data, title}) => {
  // if data is greater than 0, then map out the data to each card
  if(data?.length > 0) {
    return data.map(post => <Card key={post._id} {...post}/>)
  }

  // else, return the title
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState("");
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch('https://ai-image-generation-5yn6.onrender.com/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          },
        })

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse())
        }
      } catch (err) {
        alert(err);
      } finally {
        setLoading(false);
      }
    }

    fetchPosts();
  }, []);

  // handles searches for posts
  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout)

    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
  
        setSearchedResults(searchResults);
      }, 500)
    );
  }

  return (
    <div className="home">
      <section className="max-w-7xl mx-auto" >
        <div className="flex flex-col items-center mt-24 mb-36">
          <h1 className="font-extrabold text-[#222328] text-[64px] text-center">AI Image Generator</h1>
          <p className="mt-4 text-[#666e75] text-[18px] max-w-4xl text-center">Welcome to <strong>AI Image Generator</strong>! 
          Using the power of <strong>DALL-E AI</strong> from OpenAI, this application allows you to create your own images using your own prompts. 
          Start by clicking the <strong>create button</strong> at the top right!
          </p>
          <p className="mt-4 text-[#666e75] text-[18px] max-w-4xl text-center italic">*DALL-E only allows 50 images/minute*</p>
        </div>

        <div>
          <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
          <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by other users</p>
        </div>

        <div className="mt-16">
          <FormField 
            LabelName="Search posts"
            type="text"
            name="text"
            placeholder="Search posts"
            value={searchText}
            handleChange={handleSearchChange}
          />
        </div>

        <div className="mt-10">
          { // shows the loading icon
          loading ? (
            <div className="flex justify-center items-center">
              <Loader />
            </div>
          ) : ( // displays the results for search {name-of-the-search}
            <>
              {searchText && (
                <h2 className="font-medium text-[#666e75] text-xl mb-3">
                  Showing results for <span className="text-[#222328]">{searchText}</span>
                </h2>
              )}
              <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grids-cols-1 gap-3">
                {searchText ? (
                  <RenderCards 
                    data={searchedResults}
                    title="No search results found"
                  />
                ) : (
                  <RenderCards 
                    data={allPosts}
                    title="No posts found"
                  />
                )}
              </div>
            </>
          )}
        </div>
      </section>
    </div>
  )
}

export default Home